// Mocks generated by Mockito 5.0.16 from annotations
// in novaone/test/screens/addLead/addLeadTest.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:flutter/material.dart' as _i6;
import 'package:flutter/src/widgets/framework.dart' as _i11;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:novaone/api/api.dart' as _i9;
import 'package:novaone/auth/auth.dart' as _i5;
import 'package:novaone/enums/enums.dart' as _i10;
import 'package:novaone/models/models.dart' as _i8;
import 'package:sqflite/sqflite.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeFlutterSecureStorage_0 extends _i1.Fake
    implements _i2.FlutterSecureStorage {}

class _FakeDatabase_1 extends _i1.Fake implements _i3.Database {}

class _FakeClient_2 extends _i1.Fake implements _i4.Client {}

class _FakeObjectStore_3 extends _i1.Fake implements _i5.ObjectStore {}

class _FakeResponse_4 extends _i1.Fake implements _i4.Response {}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i6.NavigatorObserver {
  MockNavigatorObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void didPush(_i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didPush, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didPop(_i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didPop, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didRemove(
          _i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didRemove, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didReplace(
          {_i6.Route<dynamic>? newRoute, _i6.Route<dynamic>? oldRoute}) =>
      super.noSuchMethod(
          Invocation.method(
              #didReplace, [], {#newRoute: newRoute, #oldRoute: oldRoute}),
          returnValueForMissingStub: null);
  @override
  void didStartUserGesture(
          _i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(
          Invocation.method(#didStartUserGesture, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didStopUserGesture() =>
      super.noSuchMethod(Invocation.method(#didStopUserGesture, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ObjectStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockObjectStore extends _i1.Mock implements _i5.ObjectStore {
  MockObjectStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FlutterSecureStorage get storage => (super.noSuchMethod(
      Invocation.getter(#storage),
      returnValue: _FakeFlutterSecureStorage_0()) as _i2.FlutterSecureStorage);
  @override
  _i3.Database get database => (super.noSuchMethod(Invocation.getter(#database),
      returnValue: _FakeDatabase_1()) as _i3.Database);
  @override
  List<Object> get props =>
      (super.noSuchMethod(Invocation.getter(#props), returnValue: <Object>[])
          as List<Object>);
  @override
  _i7.Future<void> storeCredentials({String? password, String? email}) =>
      (super.noSuchMethod(
          Invocation.method(
              #storeCredentials, [], {#password: password, #email: email}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> storeUser({_i8.User? user}) =>
      (super.noSuchMethod(Invocation.method(#storeUser, [], {#user: user}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> storeObjects<T extends _i8.BaseModel>(List<T>? objects) =>
      (super.noSuchMethod(Invocation.method(#storeObjects, [objects]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<List<T>> getObjects<T extends _i8.BaseModel>(
          {String? where, List<Object?>? whereArgs, String? orderBy}) =>
      (super.noSuchMethod(
          Invocation.method(#getObjects, [],
              {#where: where, #whereArgs: whereArgs, #orderBy: orderBy}),
          returnValue: Future<List<T>>.value(<T>[])) as _i7.Future<List<T>>);
  @override
  _i7.Future<void> storeObject<T extends _i8.BaseModel>(T? object) =>
      (super.noSuchMethod(Invocation.method(#storeObject, [object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> updateObject<T extends _i8.BaseModel>(T? object) =>
      (super.noSuchMethod(Invocation.method(#updateObject, [object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  // @override
  // _i7.Future<void> deleteObject<T extends _i8.BaseModel>(int? id) =>
  //     (super.noSuchMethod(Invocation.method(#deleteObject, [id]),
  //         returnValue: Future<void>.value(),
  //         returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<int?> getObjectCount<T extends _i8.BaseModel>() =>
      (super.noSuchMethod(Invocation.method(#getObjectCount, []),
          returnValue: Future<int?>.value()) as _i7.Future<int?>);
  @override
  _i7.Future<_i8.User?> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
          returnValue: Future<_i8.User?>.value()) as _i7.Future<_i8.User?>);
  @override
  _i7.Future<String> getEmail() =>
      (super.noSuchMethod(Invocation.method(#getEmail, []),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> getPassword() =>
      (super.noSuchMethod(Invocation.method(#getPassword, []),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<bool> hasCredentials() =>
      (super.noSuchMethod(Invocation.method(#hasCredentials, []),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<void> deleteSecureStorageObject({String? key}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteSecureStorageObject, [], {#key: key}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> clearData() =>
      (super.noSuchMethod(Invocation.method(#clearData, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LeadsApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeadsApiClient extends _i1.Mock implements _i9.LeadsApiClient {
  MockLeadsApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_2()) as _i4.Client);
  @override
  _i5.ObjectStore get objectStore =>
      (super.noSuchMethod(Invocation.getter(#objectStore),
          returnValue: _FakeObjectStore_3()) as _i5.ObjectStore);
  @override
  Map<String, String> get baseParameters =>
      (super.noSuchMethod(Invocation.getter(#baseParameters),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  Map<String, String> get apiHeaders =>
      (super.noSuchMethod(Invocation.getter(#apiHeaders),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  _i7.Future<List<_i8.Lead>> getRecentLeads() =>
      (super.noSuchMethod(Invocation.method(#getRecentLeads, []),
              returnValue: Future<List<_i8.Lead>>.value(<_i8.Lead>[]))
          as _i7.Future<List<_i8.Lead>>);
  @override
  _i7.Future<void> delete(_i8.Lead? lead) =>
      (super.noSuchMethod(Invocation.method(#delete, [lead]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> add(_i8.Lead? lead) =>
      (super.noSuchMethod(Invocation.method(#add, [lead]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<_i8.Lead?> update(
          {_i8.Lead? lead, Map<_i10.UpdateObject, dynamic>? properties}) =>
      (super.noSuchMethod(
          Invocation.method(
              #update, [], {#lead: lead, #properties: properties}),
          returnValue: Future<_i8.Lead?>.value()) as _i7.Future<_i8.Lead?>);
  @override
  _i7.Future<_i4.Response> postToNovaOneApi(
          {Uri? uri,
          Map<String, String>? parameters,
          String? errorMessage = r'Unsuccessful request!',
          bool? testing = false}) =>
      (super.noSuchMethod(
              Invocation.method(#postToNovaOneApi, [], {
                #uri: uri,
                #parameters: parameters,
                #errorMessage: errorMessage,
                #testing: testing
              }),
              returnValue: Future<_i4.Response>.value(_FakeResponse_4()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<List<_i8.Lead>> getMore(int? lastObjectId) =>
      (super.noSuchMethod(Invocation.method(#getMore, [lastObjectId]),
              returnValue: Future<List<_i8.Lead>>.value(<_i8.Lead>[]))
          as _i7.Future<List<_i8.Lead>>);
  @override
  _i7.Future<List<_i8.Lead>> refresh(
          int? lastObjectId, _i11.BuildContext? context) =>
      (super.noSuchMethod(Invocation.method(#refresh, [lastObjectId, context]),
              returnValue: Future<List<_i8.Lead>>.value(<_i8.Lead>[]))
          as _i7.Future<List<_i8.Lead>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserverGen extends _i1.Mock
    implements _i6.NavigatorObserver {
  @override
  void didPush(_i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didPush, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didPop(_i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didPop, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didRemove(
          _i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(Invocation.method(#didRemove, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didReplace(
          {_i6.Route<dynamic>? newRoute, _i6.Route<dynamic>? oldRoute}) =>
      super.noSuchMethod(
          Invocation.method(
              #didReplace, [], {#newRoute: newRoute, #oldRoute: oldRoute}),
          returnValueForMissingStub: null);
  @override
  void didStartUserGesture(
          _i6.Route<dynamic>? route, _i6.Route<dynamic>? previousRoute) =>
      super.noSuchMethod(
          Invocation.method(#didStartUserGesture, [route, previousRoute]),
          returnValueForMissingStub: null);
  @override
  void didStopUserGesture() =>
      super.noSuchMethod(Invocation.method(#didStopUserGesture, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LeadsApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockLeadsApiClientGen extends _i1.Mock implements _i9.LeadsApiClient {
  @override
  _i4.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_2()) as _i4.Client);
  @override
  _i5.ObjectStore get objectStore =>
      (super.noSuchMethod(Invocation.getter(#objectStore),
          returnValue: _FakeObjectStore_3()) as _i5.ObjectStore);
  @override
  Map<String, String> get baseParameters =>
      (super.noSuchMethod(Invocation.getter(#baseParameters),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  Map<String, String> get apiHeaders =>
      (super.noSuchMethod(Invocation.getter(#apiHeaders),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  _i7.Future<List<_i8.Lead>> getRecentLeads() =>
      (super.noSuchMethod(Invocation.method(#getRecentLeads, []),
              returnValue: Future<List<_i8.Lead>>.value(<_i8.Lead>[]))
          as _i7.Future<List<_i8.Lead>>);
  @override
  _i7.Future<void> delete(_i8.Lead? lead) =>
      (super.noSuchMethod(Invocation.method(#delete, [lead]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> add(_i8.Lead? lead) =>
      (super.noSuchMethod(Invocation.method(#add, [lead]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<_i8.Lead?> update(
          {_i8.Lead? lead, Map<_i10.UpdateObject, dynamic>? properties}) =>
      (super.noSuchMethod(
          Invocation.method(
              #update, [], {#lead: lead, #properties: properties}),
          returnValue: Future<_i8.Lead?>.value()) as _i7.Future<_i8.Lead?>);
  @override
  _i7.Future<_i4.Response> postToNovaOneApi(
          {Uri? uri,
          Map<String, String>? parameters,
          String? errorMessage = r'Unsuccessful request!',
          bool? testing = false}) =>
      (super.noSuchMethod(
              Invocation.method(#postToNovaOneApi, [], {
                #uri: uri,
                #parameters: parameters,
                #errorMessage: errorMessage,
                #testing: testing
              }),
              returnValue: Future<_i4.Response>.value(_FakeResponse_4()))
          as _i7.Future<_i4.Response>);
  @override
  _i7.Future<List<_i8.Lead>> getMore(int? lastObjectId) =>
      (super.noSuchMethod(Invocation.method(#getMore, [lastObjectId]),
              returnValue: Future<List<_i8.Lead>>.value(<_i8.Lead>[]))
          as _i7.Future<List<_i8.Lead>>);
  @override
  _i7.Future<List<_i8.Lead>> refresh(
          int? lastObjectId, _i11.BuildContext? context) =>
      (super.noSuchMethod(Invocation.method(#refresh, [lastObjectId, context]),
              returnValue: Future<List<_i8.Lead>>.value(<_i8.Lead>[]))
          as _i7.Future<List<_i8.Lead>>);
  @override
  String toString() => super.toString();
}
