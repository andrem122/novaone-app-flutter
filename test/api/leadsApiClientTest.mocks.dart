// Mocks generated by Mockito 5.0.16 from annotations
// in novaone/test/api/leadsApiClientTest.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:convert' as _i8;
import 'dart:typed_data' as _i9;

import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i4;
import 'package:http/src/base_request.dart' as _i10;
import 'package:http/src/client.dart' as _i6;
import 'package:http/src/response.dart' as _i2;
import 'package:http/src/streamed_response.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:novaone/auth/objectStore.dart' as _i11;
import 'package:novaone/models/models.dart' as _i12;
import 'package:sqflite/sqflite.dart' as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResponse_0 extends _i1.Fake implements _i2.Response {}

class _FakeStreamedResponse_1 extends _i1.Fake implements _i3.StreamedResponse {
}

class _FakeFlutterSecureStorage_2 extends _i1.Fake
    implements _i4.FlutterSecureStorage {}

class _FakeDatabase_3 extends _i1.Fake implements _i5.Database {}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i6.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i7.Future<_i2.Response>);
  @override
  _i7.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i7.Future<_i2.Response>);
  @override
  _i7.Future<_i2.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i7.Future<_i2.Response>);
  @override
  _i7.Future<_i2.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i7.Future<_i2.Response>);
  @override
  _i7.Future<_i2.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i7.Future<_i2.Response>);
  @override
  _i7.Future<_i2.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i8.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i2.Response>.value(_FakeResponse_0()))
          as _i7.Future<_i2.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i9.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i9.Uint8List>.value(_i9.Uint8List(0)))
          as _i7.Future<_i9.Uint8List>);
  @override
  _i7.Future<_i3.StreamedResponse> send(_i10.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i3.StreamedResponse>.value(_FakeStreamedResponse_1()))
          as _i7.Future<_i3.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ObjectStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockObjectStore extends _i1.Mock implements _i11.ObjectStore {
  MockObjectStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FlutterSecureStorage get storage => (super.noSuchMethod(
      Invocation.getter(#storage),
      returnValue: _FakeFlutterSecureStorage_2()) as _i4.FlutterSecureStorage);
  @override
  _i5.Database get database => (super.noSuchMethod(Invocation.getter(#database),
      returnValue: _FakeDatabase_3()) as _i5.Database);
  @override
  List<Object> get props =>
      (super.noSuchMethod(Invocation.getter(#props), returnValue: <Object>[])
          as List<Object>);
  @override
  _i7.Future<void> storeCredentials({String? password, String? email}) =>
      (super.noSuchMethod(
          Invocation.method(
              #storeCredentials, [], {#password: password, #email: email}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> storeUser({_i12.User? user}) =>
      (super.noSuchMethod(Invocation.method(#storeUser, [], {#user: user}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> storeObjects<T extends _i12.BaseModel>(List<T>? objects) =>
      (super.noSuchMethod(Invocation.method(#storeObjects, [objects]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<List<T>> getObjects<T extends _i12.BaseModel>(
          {String? where, List<Object?>? whereArgs, String? orderBy}) =>
      (super.noSuchMethod(
          Invocation.method(#getObjects, [],
              {#where: where, #whereArgs: whereArgs, #orderBy: orderBy}),
          returnValue: Future<List<T>>.value(<T>[])) as _i7.Future<List<T>>);
  @override
  _i7.Future<void> storeObject<T extends _i12.BaseModel>(T? object) =>
      (super.noSuchMethod(Invocation.method(#storeObject, [object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> updateObject<T extends _i12.BaseModel>(T? object) =>
      (super.noSuchMethod(Invocation.method(#updateObject, [object]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  // @override
  // _i7.Future<void> deleteObject<T extends _i12.BaseModel>(int? id) =>
  //     (super.noSuchMethod(Invocation.method(#deleteObject, [id]),
  //         returnValue: Future<void>.value(),
  //         returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<int?> getObjectCount<T extends _i12.BaseModel>() =>
      (super.noSuchMethod(Invocation.method(#getObjectCount, []),
          returnValue: Future<int?>.value()) as _i7.Future<int?>);
  @override
  _i7.Future<_i12.User?> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
          returnValue: Future<_i12.User?>.value()) as _i7.Future<_i12.User?>);
  @override
  _i7.Future<String> getEmail() =>
      (super.noSuchMethod(Invocation.method(#getEmail, []),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> getPassword() =>
      (super.noSuchMethod(Invocation.method(#getPassword, []),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<bool> hasCredentials() =>
      (super.noSuchMethod(Invocation.method(#hasCredentials, []),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<void> deleteSecureStorageObject({String? key}) =>
      (super.noSuchMethod(
          Invocation.method(#deleteSecureStorageObject, [], {#key: key}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> clearData() =>
      (super.noSuchMethod(Invocation.method(#clearData, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  String toString() => super.toString();
}
